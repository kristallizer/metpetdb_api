#install python 2.7
#install pip
#sudo pip install django

******
#Setup PostgreSQL
sudo apt-get install postgresql postgresql-client postgresql-commons postgresql-contrib
sudo apt-get install postgresql-9.1-postgis
sudo ./postgresql start

#Update 'pg_hba.conf' file to authenticate connections:

# "local" is for Unix domain socket connections only
 local   all         all                              md5
# IPv4 local connections:
 host    all         all         192.168.1.32/32         md5
# IPv6 local connections:
 host    all         all         ::1/128              md5

******
#Setup MetPetDB Database
sudo -u postgres createuser metpetdb
sudo -u postgres createuser mpdb
sudo -u postgres creatdb mpdb
createlang -U mpdb -dmpdb plpgsql
psql -U mpdb -dmpdb -f /usr/share/postgresql/9.1/contrib/postgis-1.5/postgis.sql
psql -U mpdb -dmpdb -f /usr/share/postgresql/9.1/contrib/postgis-1.5/spatial_ref_sys.sql
******
#to export a database use the following
pg_dump -d mpdb_stable -O -c -d -x -f foo2.dmp

#fix the dump so that is points to PostGIS library
sed foo2.dmp -e 's_/software/postgis-1.2.0-0/pkg/lib/liblwgeom.so.1_/usr/lib/postgis/1.5.3/postgres/9.1/lib/postgis-1.5.so_' > foo2_sed.dmp

#execute the dump against your database
cat foo2_sed.dmp  | psql -U mpdb -dmpdb 
******
#install postgresql adapter: psycopg
sudo pip install psycopg2 <or> sudo easy_install psycopg2
(Your system must be able to compile a C Python extension against the libpq library: you will probably need python-dev and libpq-dev packages.
The pg_config must be available in your path, or alternatively you must specify its full path in the setup.cfg file.)

#check if django is installed
python -c "import django; print(django.get_version())"

#start project
django-admin.py startproject metpetdb

python manage.py runserver 8080 
to run on particular port number

#setup the database
/metpetdb/settings.py
engine: django.db.backends.postgresql_psycopg2
name: mpdb
user: mpdb
password: mpdb
host:

optional - set timezone

#create app
python manage.py startapp webservices

#add app to settings.py
/metpetdb/settings.py
under INSTALLED_APPS

#run migration script on the database

#write models or generate with
python mysite/manage.py inspectdb > mysite/myapp/models.py

#update models
- rearrange classes
- add related_names (if required)

#check SQL and validate
python manage.py sql webservices
python manage.py validate

#create views
#set urls inside metpetdb/urls.py

#setting up Django to use Apache
install modwsgi
sudo apt-get install libapache2-mod-wsgi
install apache2
sudo apt-get install apache2

#configure django to use apache2
https://docs.djangoproject.com/en/1.2/howto/deployment/modwsgi/

